{"ast":null,"code":"import{useState}from'react';import'./App.css';import About from'./Components/About';import NavBar from'./Components/NavBar';import TextForm from'./Components/TextForm';import Alert from'./Components/Alert';// import { BrowserRouter, Route, Routes } from \"react-router-dom\";\nimport{jsx as _jsx,Fragment as _Fragment,jsxs as _jsxs}from\"react/jsx-runtime\";function App(){const[mode,setMode]=useState('dark');const[alert,setAlert]=useState(null);const[page,setPage]=useState('home');const showAlert=(message,type)=>{setAlert({msg:message,type:type});setTimeout(()=>{setAlert(null);},1500);};const toggleMode=()=>{if(mode==='light'){setMode('dark');document.body.style.backgroundColor='grey';showAlert('Dark mode enabled','success');document.title='TextUtils - Dark Mode enabled';}else{setMode('light');document.body.style.backgroundColor='white';showAlert('Light mode enabled','success');}};const navigateTo=page=>{setPage(page);};return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(NavBar,{title:\"TextUtils\",mode:mode,toggleMode:toggleMode,navigateTo:navigateTo}),/*#__PURE__*/_jsx(Alert,{alert:alert}),/*#__PURE__*/_jsx(\"div\",{className:\"container my-3\",children:page==='home'?/*#__PURE__*/_jsx(TextForm,{showAlert:showAlert,heading:\"Write the text to analyze\",mode:mode}):/*#__PURE__*/_jsx(About,{})})]});}export default App;","map":{"version":3,"names":["useState","About","NavBar","TextForm","Alert","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","App","mode","setMode","alert","setAlert","page","setPage","showAlert","message","type","msg","setTimeout","toggleMode","document","body","style","backgroundColor","title","navigateTo","children","className","heading"],"sources":["C:/Users/KIIT/Desktop/React/my-app/src/App.js"],"sourcesContent":["import { useState } from 'react';\nimport './App.css';\nimport About from './Components/About';\nimport NavBar from './Components/NavBar';\nimport TextForm from './Components/TextForm';\nimport Alert from './Components/Alert';\n// import { BrowserRouter, Route, Routes } from \"react-router-dom\";\n\nfunction App() {\n  const [mode, setMode] = useState('dark');\n  const [alert, setAlert] = useState(null);\n  const [page, setPage] = useState('home');\n\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type,\n    });\n    setTimeout(() => {\n      setAlert(null);\n    }, 1500);\n  };\n\n  const toggleMode = () => {\n    if (mode === 'light') {\n      setMode('dark');\n      document.body.style.backgroundColor = 'grey';\n      showAlert('Dark mode enabled', 'success');\n      document.title = 'TextUtils - Dark Mode enabled';\n    } else {\n      setMode('light');\n      document.body.style.backgroundColor = 'white';\n      showAlert('Light mode enabled', 'success');\n    }\n  };\n\n  const navigateTo = (page) => {\n    setPage(page);\n  };\n\n  return (\n    <>\n      {/* <BrowserRouter> */}\n        <NavBar title=\"TextUtils\" mode={mode} toggleMode={toggleMode} navigateTo={navigateTo} />\n        <Alert alert={alert} />\n        <div className=\"container my-3\">\n          {/* <Routes>\n            <Route exact path=\"/\" element={<TextForm showAlert={showAlert} heading=\"Write the text to analyze\" mode={mode} />} />           \n            <Route exact path=\"about\" element={<About />} />\n          </Routes> */}\n          {page === 'home' ? (\n            <TextForm showAlert={showAlert} heading=\"Write the text to analyze\" mode={mode} />\n          ) : (\n            <About />\n          )}\n        </div>\n      {/* </BrowserRouter> */}\n    </>\n  );\n}\n\nexport default App;\n"],"mappings":"AAAA,OAASA,QAAQ,KAAQ,OAAO,CAChC,MAAO,WAAW,CAClB,MAAO,CAAAC,KAAK,KAAM,oBAAoB,CACtC,MAAO,CAAAC,MAAM,KAAM,qBAAqB,CACxC,MAAO,CAAAC,QAAQ,KAAM,uBAAuB,CAC5C,MAAO,CAAAC,KAAK,KAAM,oBAAoB,CACtC;AAAA,OAAAC,GAAA,IAAAC,IAAA,CAAAC,QAAA,IAAAC,SAAA,CAAAC,IAAA,IAAAC,KAAA,yBAEA,QAAS,CAAAC,GAAGA,CAAA,CAAG,CACb,KAAM,CAACC,IAAI,CAAEC,OAAO,CAAC,CAAGb,QAAQ,CAAC,MAAM,CAAC,CACxC,KAAM,CAACc,KAAK,CAAEC,QAAQ,CAAC,CAAGf,QAAQ,CAAC,IAAI,CAAC,CACxC,KAAM,CAACgB,IAAI,CAAEC,OAAO,CAAC,CAAGjB,QAAQ,CAAC,MAAM,CAAC,CAExC,KAAM,CAAAkB,SAAS,CAAGA,CAACC,OAAO,CAAEC,IAAI,GAAK,CACnCL,QAAQ,CAAC,CACPM,GAAG,CAAEF,OAAO,CACZC,IAAI,CAAEA,IACR,CAAC,CAAC,CACFE,UAAU,CAAC,IAAM,CACfP,QAAQ,CAAC,IAAI,CAAC,CAChB,CAAC,CAAE,IAAI,CAAC,CACV,CAAC,CAED,KAAM,CAAAQ,UAAU,CAAGA,CAAA,GAAM,CACvB,GAAIX,IAAI,GAAK,OAAO,CAAE,CACpBC,OAAO,CAAC,MAAM,CAAC,CACfW,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,eAAe,CAAG,MAAM,CAC5CT,SAAS,CAAC,mBAAmB,CAAE,SAAS,CAAC,CACzCM,QAAQ,CAACI,KAAK,CAAG,+BAA+B,CAClD,CAAC,IAAM,CACLf,OAAO,CAAC,OAAO,CAAC,CAChBW,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,eAAe,CAAG,OAAO,CAC7CT,SAAS,CAAC,oBAAoB,CAAE,SAAS,CAAC,CAC5C,CACF,CAAC,CAED,KAAM,CAAAW,UAAU,CAAIb,IAAI,EAAK,CAC3BC,OAAO,CAACD,IAAI,CAAC,CACf,CAAC,CAED,mBACEN,KAAA,CAAAF,SAAA,EAAAsB,QAAA,eAEIxB,IAAA,CAACJ,MAAM,EAAC0B,KAAK,CAAC,WAAW,CAAChB,IAAI,CAAEA,IAAK,CAACW,UAAU,CAAEA,UAAW,CAACM,UAAU,CAAEA,UAAW,CAAE,CAAC,cACxFvB,IAAA,CAACF,KAAK,EAACU,KAAK,CAAEA,KAAM,CAAE,CAAC,cACvBR,IAAA,QAAKyB,SAAS,CAAC,gBAAgB,CAAAD,QAAA,CAK5Bd,IAAI,GAAK,MAAM,cACdV,IAAA,CAACH,QAAQ,EAACe,SAAS,CAAEA,SAAU,CAACc,OAAO,CAAC,2BAA2B,CAACpB,IAAI,CAAEA,IAAK,CAAE,CAAC,cAElFN,IAAA,CAACL,KAAK,GAAE,CACT,CACE,CAAC,EAER,CAAC,CAEP,CAEA,cAAe,CAAAU,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}