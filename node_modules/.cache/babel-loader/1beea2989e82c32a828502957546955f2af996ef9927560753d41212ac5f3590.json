{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\KIIT\\\\Desktop\\\\React\\\\my-app\\\\src\\\\Components\\\\About.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function About(props) {\n  let myStyle = {\n    color: props.mode === 'dark' ? 'white' : '#0000008c',\n    backgroundColor: props.mode === 'dark' ? '#0000008c' : 'white',\n    border: '2px solid',\n    borderColor: props.mode === 'dark' ? '#0000008c' : 'white'\n  };\n  let buttonClass = props.mode === 'dark' ? '' : 'light-mode';\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    style: myStyle,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"my-3\",\n      children: \"About Us\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"accordion\",\n      id: \"accordionExample\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"accordion-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"accordion-header\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `accordion-button ${buttonClass}`,\n            type: \"button\",\n            \"data-bs-toggle\": \"collapse\",\n            style: myStyle,\n            \"data-bs-target\": \"#collapseOne\",\n            \"aria-expanded\": \"true\",\n            \"aria-controls\": \"collapseOne\",\n            children: /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"About us\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 28,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"collapseOne\",\n          className: \"accordion-collapse collapse show\",\n          \"data-bs-parent\": \"#accordionExample\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"accordion-body\",\n            style: myStyle,\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"This is the first item's accordion body.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 29\n            }, this), \" It is shown by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the \", /*#__PURE__*/_jsxDEV(\"code\", {\n              children: \".accordion-body\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 79\n            }, this), \", though the transition does limit overflow.\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"accordion-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"accordion-header\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `accordion-button collapsed ${buttonClass}`,\n            type: \"button\",\n            \"data-bs-toggle\": \"collapse\",\n            style: myStyle,\n            \"data-bs-target\": \"#collapseTwo\",\n            \"aria-expanded\": \"false\",\n            \"aria-controls\": \"collapseTwo\",\n            children: /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \" Free to Use\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 28\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"collapseTwo\",\n          className: \"accordion-collapse collapse\",\n          \"data-bs-parent\": \"#accordionExample\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"accordion-body\",\n            style: myStyle,\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"This is the second item's accordion body.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 29\n            }, this), \" It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the\", ' ', /*#__PURE__*/_jsxDEV(\"code\", {\n              children: \".accordion-body\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 29\n            }, this), \", though the transition does limit overflow.\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"accordion-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"accordion-header\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `accordion-button collapsed ${buttonClass}`,\n            type: \"button\",\n            \"data-bs-toggle\": \"collapse\",\n            style: myStyle,\n            \"data-bs-target\": \"#collapseThree\",\n            \"aria-expanded\": \"false\",\n            \"aria-controls\": \"collapseThree\",\n            children: /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Browser Compaitable\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"collapseThree\",\n          className: \"accordion-collapse collapse\",\n          \"data-bs-parent\": \"#accordionExample\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"accordion-body\",\n            style: myStyle,\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"This is the third item's accordion body.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 29\n            }, this), \" It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the\", ' ', /*#__PURE__*/_jsxDEV(\"code\", {\n              children: \".accordion-body\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 29\n            }, this), \", though the transition does limit overflow.\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 9\n  }, this);\n}\n_c = About;\nvar _c;\n$RefreshReg$(_c, \"About\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","About","props","myStyle","color","mode","backgroundColor","border","borderColor","buttonClass","className","style","children","fileName","_jsxFileName","lineNumber","columnNumber","id","type","_c","$RefreshReg$"],"sources":["C:/Users/KIIT/Desktop/React/my-app/src/Components/About.js"],"sourcesContent":["import React from 'react';\r\n\r\nexport default function About(props) {\r\n    let myStyle = {\r\n        color: props.mode === 'dark' ? 'white' : '#0000008c',\r\n        backgroundColor: props.mode === 'dark' ? '#0000008c' : 'white',\r\n        border: '2px solid',\r\n        borderColor: props.mode === 'dark' ? '#0000008c' : 'white'\r\n    };\r\n\r\n    let buttonClass = props.mode === 'dark' ? '' : 'light-mode';\r\n\r\n    return (\r\n        <div className=\"container\" style={myStyle}>\r\n            <h2 className=\"my-3\">About Us</h2>\r\n            <div className=\"accordion\" id=\"accordionExample\">\r\n                <div className=\"accordion-item\">\r\n                    <h2 className=\"accordion-header\">\r\n                        <button\r\n                            className={`accordion-button ${buttonClass}`}\r\n                            type=\"button\"\r\n                            data-bs-toggle=\"collapse\"\r\n                            style={myStyle}\r\n                            data-bs-target=\"#collapseOne\"\r\n                            aria-expanded=\"true\"\r\n                            aria-controls=\"collapseOne\"\r\n                        >\r\n                        <strong>About us</strong>\r\n                        </button>\r\n                    </h2>\r\n                    <div id=\"collapseOne\" className=\"accordion-collapse collapse show\" data-bs-parent=\"#accordionExample\">\r\n                        <div className=\"accordion-body\" style={myStyle}>\r\n                            <strong>This is the first item's accordion body.</strong> It is shown by default, until the\r\n                            collapse plugin adds the appropriate classes that we use to style each element. These classes\r\n                            control the overall appearance, as well as the showing and hiding via CSS transitions. You\r\n                            can modify any of this with custom CSS or overriding our default variables. It's also worth\r\n                            noting that just about any HTML can go within the <code>.accordion-body</code>, though the\r\n                            transition does limit overflow.\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"accordion-item\">\r\n                    <h2 className=\"accordion-header\">\r\n                        <button\r\n                            className={`accordion-button collapsed ${buttonClass}`}\r\n                            type=\"button\"\r\n                            data-bs-toggle=\"collapse\"\r\n                            style={myStyle}\r\n                            data-bs-target=\"#collapseTwo\"\r\n                            aria-expanded=\"false\"\r\n                            aria-controls=\"collapseTwo\"\r\n                        >\r\n                           <strong> Free to Use</strong>\r\n                        </button>\r\n                    </h2>\r\n                    <div id=\"collapseTwo\" className=\"accordion-collapse collapse\" data-bs-parent=\"#accordionExample\">\r\n                        <div className=\"accordion-body\" style={myStyle}>\r\n                            <strong>This is the second item's accordion body.</strong> It is hidden by default, until\r\n                            the collapse plugin adds the appropriate classes that we use to style each element. These\r\n                            classes control the overall appearance, as well as the showing and hiding via CSS\r\n                            transitions. You can modify any of this with custom CSS or overriding our default variables.\r\n                            It's also worth noting that just about any HTML can go within the{' '}\r\n                            <code>.accordion-body</code>, though the transition does limit overflow.\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"accordion-item\">\r\n                    <h2 className=\"accordion-header\">\r\n                        <button\r\n                            className={`accordion-button collapsed ${buttonClass}`}\r\n                            type=\"button\"\r\n                            data-bs-toggle=\"collapse\"\r\n                            style={myStyle}\r\n                            data-bs-target=\"#collapseThree\"\r\n                            aria-expanded=\"false\"\r\n                            aria-controls=\"collapseThree\"\r\n                        >\r\n                            <strong>Browser Compaitable</strong>\r\n                        </button>\r\n                    </h2>\r\n                    <div id=\"collapseThree\" className=\"accordion-collapse collapse\" data-bs-parent=\"#accordionExample\">\r\n                        <div className=\"accordion-body\" style={myStyle}>\r\n                            <strong>This is the third item's accordion body.</strong> It is hidden by default, until the\r\n                            collapse plugin adds the appropriate classes that we use to style each element. These\r\n                            classes control the overall appearance, as well as the showing and hiding via CSS\r\n                            transitions. You can modify any of this with custom CSS or overriding our default variables.\r\n                            It's also worth noting that just about any HTML can go within the{' '}\r\n                            <code>.accordion-body</code>, though the transition does limit overflow.\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"container\">\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}